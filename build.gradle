plugins {
    id 'fabric-loom' version '1.5.+'
    id "io.github.p03w.machete" version "1.+" // automatic jar compressing on build
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
group = project.maven_group
//version = project.mod_version

// Formats the mod version to include the Minecraft version and build number (if present)
// example: 1.0.0+1.18.2-100
String buildNumber = System.getenv("GITHUB_RUN_NUMBER")
version = "${mod_version}+${minecraft_version}" + (buildNumber != null ? "-${buildNumber}" : "")

repositories {
    maven { url = "https://maven.blamejared.com/" } // JEI
    maven { url = "https://maven.parchmentmc.org" } // Parchment mappings
    maven { url = "https://maven.quiltmc.org/repository/release" } // Quilt Mappings
    maven { url = "https://maven.terraformersmc.com/releases/" } // Mod Menu
    maven {	url = "https://maven.terraformersmc.com/" } // EMI
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    } // JADE

    maven {
        name = "Fuzs Mod Resources"
        url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
    } // Forge Config API Port
}

fabricApi {
    configureDataGeneration()
}

dependencies {
    // Setup
    minecraft("com.mojang:minecraft:${minecraft_version}")
    mappings(loom.layered {
        it.parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
        it.officialMojangMappings { nameSyntheticMembers = false }
    })
    modImplementation("net.fabricmc:fabric-loader:${fabric_loader_version}")

    // dependencies
    modImplementation("net.fabricmc.fabric-api:fabric-api:${fabric_api_version}")
    modImplementation "net.fabricmc.fabric-api:fabric-command-api-v1:${fabric_api_version}"

    // Forge Config API
    modApi "fuzs.forgeconfigapiport:forgeconfigapiport-fabric:${forge_config_api_version}"

    // Mod Menu
    modLocalRuntime("com.terraformersmc:modmenu:${modmenu_version}")

    // JADE
    modLocalRuntime("curse.maven:jade-324717:${jade_version}")

    // EMI
    modLocalRuntime("dev.emi:emi-fabric:${emi_version}")
}

processResources {
    // require dependencies to be the version compiled against or newer
    Map<String, String> properties = Map.of(
            "version", version,
            "fabric_loader_version", fabric_loader_version,
            "fabric_api_version", fabric_api_version,
            "minecraft_version", minecraft_version
    )

    inputs.properties(properties)

    filesMatching("fabric.mod.json") {
        expand properties
    }
}


machete {
    // disable machete locally for faster builds
    enabled = buildNumber != null
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = Integer.parseInt(sourceCompatibility)
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
